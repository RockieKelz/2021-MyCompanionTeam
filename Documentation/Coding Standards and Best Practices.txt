Coding Standards and Best Practices

Agreeing Members:
Adam Deye 
Sam Whorton
Amber Xiong

Purpose

To develop reliable and maintainable applications, you must follow coding standards and best practices.
The naming conventions, coding standards and best practices described in this document are compiled from our own experience. 
All team members are always expected to follow the coding standards and best practices.


** Folder Heiarchy **


** Commenting standards **

	File header expectation
		Example:

	Method heading expectation
		Example:

	Code block expectation
		Example:


** Naming convention **

	Meaningful, descriptive words to name variables.	

	Good:
		string characterName;
		int Row, Column;
		GameObject spawnedItem;
		
	Not Good:
		string nam;
		int i,j;
		GameObject temp;

	Capitalization expectation
	
		PascalCase should be used for class and method names.

		CamelCase should be used for method arguments and local variables.

		Example: public class Character
			 {
				public Character PrintDetails(string characterName)
				{
					//...
				}
			 }
		
	Standard Prefixing 
		
		The letter I should be used to prefix an interface.

		Example: public interface ICharacter {};
		
	Abbreviation use 
	
		Avoid using abbreviations excluding Xml, etc.

		Example: Do // string firstName; 
			 Don't // string frstNm;
		
** Layout Conventions **	

	Indenting standard
		Example:
		
	Curly braces ( {} ) format
		Example:
		
	Blank line expectation
		Example:
		
	Spacing around operators
		Example:

	Maximum characters per line
		
	Maximum nested conditions 
		
	Maximum lines per method
		
	Maximum lines per file

	#region usage
		Example:
		
** Programming Practices **

	Static values (hardcoded numbers. Const variables, and #defines)

	Commenting out code

	DRY practices (“Don’t Repeat Yourself")
